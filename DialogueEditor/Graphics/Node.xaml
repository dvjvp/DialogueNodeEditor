<UserControl x:Class="DialogueEditor.Node"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DialogueEditor"
             mc:Ignorable="d">

    <Border x:Name="selectionBorder">
        <Grid x:Name="grid" Background="#010101" Margin="3" Cursor="SizeAll">
            <Grid.RowDefinitions>
                <RowDefinition Height=".2*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height=".125*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height=".1*"/>
                <RowDefinition Height=".2*"/>
            </Grid.RowDefinitions>


            <!-- INPUTS -->

            <!-- Input pin -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="0" Background="#3f3f3f3f" x:Name="InputBorder">
                <RadioButton VerticalAlignment="Center" HorizontalAlignment="Center" x:Name="InputPin" LostMouseCapture="OnMouseControlLost" Click="OnPinMousedDown" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand"/>
            </Border>

            <!-- BODY -->
   
            <!-- Node name & Delete button -->
            <Border x:Name="BorderUp"  BorderBrush="Black" BorderThickness="1" Grid.Row="1" Background="#3f3f3f">
                <DockPanel  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5,5,5,5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" FontWeight="DemiBold" IsHitTestVisible="False">Dialogue ID:</Label>
                        <TextBox x:Name="nodeNameField" Text="NodeName" Grid.Column="1" Grid.Row="0" IsHitTestVisible="False" IsReadOnly="True" Background="Transparent" BorderThickness="0" VerticalAlignment="Center"/>


                    </Grid>
                <!--    <Button Content="X" Width="20" Margin="5,0,0,0" Click="ButtonDelete_Click" Background="DarkRed" HorizontalAlignment="Right" Cursor="Hand"/>
            -->    </DockPanel>
            </Border>

            <!-- Prompt for being an option in multi selection -->
            <Border x:Name="BorderPrompt" BorderBrush="Black" BorderThickness="1" Grid.Row="2" Background="#FF4C8D46">
                <StackPanel>
                    <Label HorizontalAlignment="Center" FontWeight="DemiBold">Prompt:</Label>
                    <TextBox x:Name="PromptTextBox" Margin="5"/>
                </StackPanel>
            </Border>
            
            <!-- Dialogue text -->
            <Border x:Name="BorderMiddle"  BorderBrush="Black" BorderThickness="1" Grid.Row="3" Background="#3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Normal dialogue">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <!-- <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call actor event"> -->
                            <!--                             <Setter Property="Visibility" Value="Visible"/> -->
                            <!--                         </DataTrigger> -->
                            <!--                         <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call level event"> -->
                            <!--                             <Setter Property="Visibility" Value="Visible"/> -->
                            <!--                         </DataTrigger> -->
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label Grid.Column="0" Grid.Row="1" FontWeight="DemiBold" IsHitTestVisible="False">Actor name:</Label>
                        <TextBox x:Name="actorName" Text="Alex" Grid.Column="1" Grid.Row="1" TextChanged="aactorName_TextChanged" Margin="5" MaxWidth="300"/>
                    </StackPanel>
                    <Label HorizontalAlignment="Center" FontWeight="DemiBold" Content=" Dialogue text:" IsHitTestVisible="False"/>
                    <TextBox x:Name="dialogueText" Text="Dialogue Text" Margin="5" TextWrapping="Wrap" MaxWidth="300"  VerticalScrollBarVisibility="Auto"  SpellCheck.IsEnabled="True" Height="Auto"/>
                </StackPanel>
            </Border>

            <!-- Combo box - outputType selection -->
            <Border x:Name="BorderDown"  BorderBrush="Black" BorderThickness="1" Grid.Row="4" Background="#3f3f3f">
                <StackPanel>
                    <Label HorizontalAlignment="Center" FontWeight="DemiBold"  Content="Output type:" IsHitTestVisible="False"/>
                    <ComboBox x:Name="outputType" Margin="5" SelectionChanged="outputType_SelectionChanged" Cursor="Arrow" Text="Normal dialogue">
                        <ComboBoxItem Content="Normal dialogue" IsSelected="True"/>
                        <ComboBoxItem Content="End dialogue"/>
                        <ComboBoxItem Content="Multiple choices"/>
                        <ComboBoxItem Content="If player has item"/>
                        <ComboBoxItem Content="Call actor event"/>
                        <ComboBoxItem Content="Call level event"/>
                        <ComboBoxItem Content="Go to node"/>
                    </ComboBox>
                </StackPanel>
            </Border>

            <!-- OUTPUTS -->

            <!-- Normal dialogue output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Normal dialogue">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <!-- <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call actor event"> -->
                            <!--                             <Setter Property="Visibility" Value="Visible"/> -->
                            <!--                         </DataTrigger> -->
                            <!--                         <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call level event"> -->
                            <!--                             <Setter Property="Visibility" Value="Visible"/> -->
                            <!--                         </DataTrigger> -->
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <RadioButton x:Name="outputPinNormal"  VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Column="1" Click="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand"/>
            </Border>

            <!-- If player has item output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="If player has item">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Item name</Label>
                    <Label Grid.Column="1" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Count</Label>
                    <TextBox x:Name="itemName"  Grid.Column="0" Grid.Row="1" Margin="2" TextChanged="RemoveSpacesFromSender"/>
                    <TextBox x:Name="itemCount"  Grid.Column="1" Grid.Row="1" Margin="2"/>
                    <Label Grid.Column="0" Grid.Row="2" Foreground="White" HorizontalAlignment="Center">True</Label>
                    <Label Grid.Column="1" Grid.Row="2" Foreground="White" HorizontalAlignment="Center">False</Label>
                    <RadioButton x:Name="outputPinItemTrue"  Grid.Column="0" Grid.Row="3" HorizontalAlignment="Center" Click="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections" Cursor="Hand"/>
                    <RadioButton x:Name="outputPinItemFalse"  Grid.Column="1" Grid.Row="3" HorizontalAlignment="Center" Click="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections" Cursor="Hand"/>
                </Grid>
            </Border>

            <!-- Multiple choices output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Multiple choices">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Grid.Column="1">
                        <Label Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center">After</Label>
                        <TextBox x:Name="SecondsTextBox"/>
                        <Label Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center">seconds play this:</Label>
                    </StackPanel>
                    <RadioButton x:Name="outputPinMultipleChoicesDefault" Grid.Row="1" Grid.Column="1" LostMouseCapture="OnMouseControlLost" VerticalAlignment="Center" HorizontalAlignment="Center" Click="OnPinMousedDown" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections" Cursor="Hand"/>

                    <Label Grid.Row="0" Grid.Column="0" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Bottom">Avaiable options</Label>
                    <RadioButton Grid.Row="1" Grid.Column="0" x:Name="outputPinMultipleChoices" LostMouseCapture="OnMouseControlLost" VerticalAlignment="Center" HorizontalAlignment="Center"  Background="#FF10EC4C"  Click="OnPinMousedDown" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections" Cursor="Hand"/>

                </Grid>
            </Border>

            <!-- Call actor event output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call actor event">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Actor name</Label>
                    <Label Grid.Column="1" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Event name</Label>
                    <TextBox x:Name="eventActorName"  Grid.Column="0" Grid.Row="1" Margin="2" TextChanged="RemoveSpacesFromSender"/>
                    <TextBox x:Name="eventActorEventName"  Grid.Column="1" Grid.Row="1" Margin="2" TextChanged="RemoveSpacesFromSender"/>
                    <RadioButton x:Name="outputPinActorEvent"  Grid.ColumnSpan="2" Grid.Column="0"  Grid.Row="2" HorizontalAlignment="Center" Click="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections" Cursor="Hand"/>
                </Grid>
            </Border>

            <!-- Call level event output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call level event">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Event name</Label>
                    <TextBox x:Name="levelEventName" Grid.Row="1" Margin="2"/>
                    <RadioButton x:Name="outputPinLevelEvent"  Grid.Row="2" HorizontalAlignment="Center" Click="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections" Cursor="Hand"/>
                </Grid>
            </Border>

            <!-- Go to node -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Go to node">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Target dialogue ID</Label>
                    <TextBox x:Name="TargetDialogueID" Grid.Row="1" Margin="2"/>
                </Grid>
            </Border>
        </Grid>
    </Border>
    
</UserControl>
