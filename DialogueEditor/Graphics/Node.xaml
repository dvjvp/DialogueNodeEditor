<UserControl x:Class="DialogueEditor.Node"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:DialogueEditor"
             mc:Ignorable="d">

    <Border x:Name="selectionBorder">
        <Grid x:Name="grid" Background="#010101" Margin="3" Cursor="SizeAll">
            <Grid.RowDefinitions>
                <RowDefinition Height=".2*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height=".125*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height=".1*"/>
                <RowDefinition Height=".2*"/>
            </Grid.RowDefinitions>


            <!-- INPUTS -->

            <!-- Input pin -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="0" Background="#3f3f3f3f" x:Name="InputBorder">
                <Image Source="../Resources/NodeResources/PinInput.png"  VerticalAlignment="Center" HorizontalAlignment="Stretch" x:Name="InputPin" LostMouseCapture="OnMouseControlLost" PreviewMouseDown="OnPinMousedDown" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections" Cursor="Hand" Height="40"/>
            </Border>

            <!-- BODY -->
   
            <!-- Node name & Delete button -->
            <Border x:Name="BorderUp"  BorderBrush="Black" BorderThickness="1" Grid.Row="1" Background="#3f3f3f">
                <DockPanel  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="5,5,5,5">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Label Grid.Column="0" Grid.Row="0" FontWeight="DemiBold" IsHitTestVisible="False">Dialogue ID:</Label>
                        <TextBox x:Name="nodeNameField" Text="NodeName" Grid.Column="1" Grid.Row="0" VerticalAlignment="Center" PreviewKeyDown="DontAllowSpaces">
                            <TextBox.Style>
                                <Style TargetType="TextBox">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                    <Setter Property="Background" Value="Transparent"/>
                                    <Setter Property="IsReadOnly" Value="True"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Shortcut target">
                                            <Setter Property="IsHitTestVisible" Value="True"/>
                                            <Setter Property="Background" Value="White"/>
                                            <Setter Property="IsReadOnly" Value="False"/>
                                            <Setter Property="BorderThickness" Value="1"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBox.Style>
                        </TextBox>


                    </Grid>
                <!--    <Button Content="X" Width="20" Margin="5,0,0,0" Click="ButtonDelete_Click" Background="DarkRed" HorizontalAlignment="Right" Cursor="Hand"/>
            -->    </DockPanel>
            </Border>

            <!-- Prompt for being an option in multi selection -->
            <Border x:Name="BorderPrompt" BorderBrush="Black" BorderThickness="1" Grid.Row="2" Background="#FF4C8D46">
                <StackPanel>
                    <Label HorizontalAlignment="Center" FontWeight="DemiBold">Prompt:</Label>
                    <TextBox x:Name="PromptTextBox" Margin="5" LostFocus="OnNodeDataChanged"/>
                    <Label HorizontalAlignment="Center" FontWeight="DemiBold">Bound to actor:</Label>
                    <ComboBox x:Name="PromptActorsCombobox" IsEditable="True" Margin="5,0,5,5" 
                              GotFocus="PromptActorsCombobox_GotFocus" LostFocus="PromptActorsCombobox_LostFocus"/>
                </StackPanel>
            </Border>
            
            <!-- Dialogue text -->
            <Border x:Name="BorderMiddle"  BorderBrush="Black" BorderThickness="1" Grid.Row="3" Background="#3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Normal dialogue">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <!-- <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call actor event"> -->
                            <!--                             <Setter Property="Visibility" Value="Visible"/> -->
                            <!--                         </DataTrigger> -->
                            <!--                         <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call level event"> -->
                            <!--                             <Setter Property="Visibility" Value="Visible"/> -->
                            <!--                         </DataTrigger> -->
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <StackPanel>
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                        <Label Grid.Column="0" Grid.Row="1" FontWeight="DemiBold" IsHitTestVisible="False">Actor name:</Label>
                        <ComboBox x:Name="actorName" IsEditable="True" Text="None" Grid.Column="1" Grid.Row="1" Margin="5" MaxWidth="300" 
                                  LostFocus="actorName_LostFocus" GotFocus="actorName_GotFocus"/>
                    </StackPanel>
                    <Label HorizontalAlignment="Center" FontWeight="DemiBold" Content=" Dialogue text:" IsHitTestVisible="False"/>
                    <TextBox x:Name="dialogueText" Text="Dialogue Text" Margin="5" TextWrapping="Wrap" MaxWidth="300"  VerticalScrollBarVisibility="Auto"  SpellCheck.IsEnabled="True" Height="Auto" LostFocus="OnNodeDataChanged"/>
                </StackPanel>
            </Border>

            <!-- Combo box - outputType selection -->
            <Border x:Name="BorderDown"  BorderBrush="Black" BorderThickness="1" Grid.Row="4" Background="#3f3f3f">
                <StackPanel>
                    <Label HorizontalAlignment="Center" FontWeight="DemiBold"  Content="Output type:" IsHitTestVisible="False"/>
                    <ComboBox x:Name="outputType" Margin="5" SelectionChanged="outputType_SelectionChanged" Cursor="Arrow" Text="Normal dialogue">
                        <ComboBoxItem Content="Normal dialogue" IsSelected="True"/>
                        <ComboBoxItem Content="End dialogue"/>
                        <ComboBoxItem Content="Multiple choices"/>
                        <ComboBoxItem Content="If player has item"/>
                        <ComboBoxItem Content="Call actor event"/>
                        <ComboBoxItem Content="Call level event"/>
                        <ComboBoxItem Content="Shortcut"/>
                        <ComboBoxItem Content="Shortcut target"/>
                        <ComboBoxItem Content="Check bool"/>
                        <ComboBoxItem Content="Set bool"/>
                        <ComboBoxItem Content="Counter"/>
                    </ComboBox>
                </StackPanel>
            </Border>

            <!-- OUTPUTS -->

            <!-- Normal dialogue output &  -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Normal dialogue">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Shortcut target">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Image Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinNormal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="1" PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
            </Border>

            <!-- If player has item output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="If player has item">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Item name</Label>
                    <Label Grid.Column="1" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Count</Label>
                    <ComboBox x:Name="itemName" IsEditable="True" Grid.Column="0" Grid.Row="1" Margin="2" LostFocus="itemName_LostFocus" GotFocus="itemName_GotFocus" SelectionChanged="itemName_SelectionChanged"/>
                    <TextBox x:Name="itemCount"  Grid.Column="1" Grid.Row="1" Margin="2" LostFocus="OnNodeDataChanged"/>
                    <Label Grid.Column="0" Grid.Row="2" Foreground="White" HorizontalAlignment="Center">True</Label>
                    <Label Grid.Column="1" Grid.Row="2" Foreground="White" HorizontalAlignment="Center">False</Label>
                    <Image Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinItemTrue" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="3"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
                    <Image Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinItemFalse" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="1" Grid.Row="3"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
                </Grid>
            </Border>

            <!-- Multiple choices output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Multiple choices">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <StackPanel Grid.Row="0" Grid.Column="1">
                        <Label Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center">After</Label>
                        <TextBox x:Name="SecondsTextBox" LostFocus="OnNodeDataChanged" Text="10"/>
                        <Label Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Center">seconds play this:</Label>
                    </StackPanel>
                    <Image Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinMultipleChoicesDefault" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="1" Grid.Row="1"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>

                    <Label Grid.Row="0" Grid.Column="0" Foreground="White" HorizontalAlignment="Center" VerticalAlignment="Bottom">Avaiable options</Label>
                    <Image Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinMultipleChoices" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Column="0" Grid.Row="1"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>

                </Grid>
            </Border>

            <!-- Call actor event output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call actor event">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Actor name</Label>
                    <Label Grid.Column="1" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Event name</Label>
                    <TextBox x:Name="eventActorName"  Grid.Column="0" Grid.Row="1" Margin="2" TextChanged="RemoveSpacesFromSender" LostFocus="OnNodeDataChanged"/>
                    <TextBox x:Name="eventActorEventName"  Grid.Column="1" Grid.Row="1" Margin="2" TextChanged="RemoveSpacesFromSender" LostFocus="OnNodeDataChanged"/>
                    <Image Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinActorEvent" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Grid.Column="0" Grid.Row="2"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
                </Grid>
            </Border>

            <!-- Call level event output -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Call level event">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Event name</Label>
                    <TextBox x:Name="levelEventName" Grid.Row="1" Margin="2" LostFocus="OnNodeDataChanged"/>
                    <Image Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinLevelEvent" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Row="2"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
                </Grid>
            </Border>

            <!-- Go to node -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="#3f3f3f3f">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Shortcut">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Target dialogue ID</Label>
                    <TextBox x:Name="TargetDialogueID" Grid.Row="1" Margin="2" LostFocus="TargetDialogueID_LostFocus" PreviewKeyDown="DontAllowSpaces"/>
                </Grid>
            </Border>
            
            <!-- Check bool -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="3" Background="#FF420202">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Check bool">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Bool to check</Label>
                    <TextBox x:Name="CheckBoolID" Grid.Row="1" Margin="2" LostFocus="OnNodeDataChanged" PreviewKeyDown="DontAllowSpaces"/>
                </Grid>
            </Border>
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="Black">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Check bool">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">TRUE</Label>
                    <Label Grid.Column="1" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">FALSE</Label> 
                    <Image Grid.Column="0" Grid.Row="1" Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinCheckBoolTrue" VerticalAlignment="Center" HorizontalAlignment="Stretch"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
                    <Image Grid.Column="1" Grid.Row="1" Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinCheckBoolFalse" VerticalAlignment="Center" HorizontalAlignment="Stretch"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
                </Grid>
            </Border>

            <!-- Set bool -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="3" Background="#FFFF4E4E">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Set bool">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <StackPanel>
                        <Label Foreground="White" HorizontalAlignment="Center">Bool to set:</Label>
                        <TextBox x:Name="SetBoolID" LostFocus="OnNodeDataChanged" PreviewKeyDown="DontAllowSpaces"/>
                        <Label Foreground="White" HorizontalAlignment="Center">Value:</Label>
                        <CheckBox x:Name="SetBoolValue" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </Border>
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="Black">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Set bool">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Image Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinSetBool" VerticalAlignment="Center" HorizontalAlignment="Stretch" Grid.Row="2"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
            </Border>
            
            <!-- Counter -->
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="3" Background="#FFDCD58A">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Counter">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Label Grid.Row="0" HorizontalAlignment="Center">Number used</Label>
                    <TextBox x:Name="CounterNo" Grid.Row="1" Margin="2" LostFocus="OnNodeDataChanged" PreviewKeyDown="DontAllowSpaces" Text="1"/>
                </Grid>
            </Border>
            <Border BorderBrush="Black" BorderThickness="1" Grid.Row="5" Background="Black">
                <Border.Style>
                    <Style TargetType="Border">
                        <Setter Property="Visibility" Value="Collapsed"/>
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ElementName=outputType, Path=SelectedItem.Content}" Value="Counter">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>

                    <Label Grid.Column="0" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">Less</Label>
                    <Label Grid.Column="1" Grid.Row="0" Foreground="White" HorizontalAlignment="Center">More or equal</Label>
                    <Image Grid.Column="0" Grid.Row="1" Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinCounterLess" VerticalAlignment="Center" HorizontalAlignment="Stretch"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
                    <Image Grid.Column="1" Grid.Row="1" Source="../Resources/NodeResources/PinOutput.png" x:Name="outputPinCounterMore" VerticalAlignment="Center" HorizontalAlignment="Stretch"  PreviewMouseDown="OnPinMousedDown" LostMouseCapture="OnMouseControlLost" MouseEnter="HighlightPinConnections" MouseLeave="UnhighlightPinConnections"  Cursor="Hand" Height="40"/>
                </Grid>
            </Border>

        </Grid>
    </Border>
    
</UserControl>
